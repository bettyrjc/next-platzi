{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Error from './_error';\nimport Layout from '../components/layout';\nimport Podcasts from '../components/podcastListWithClick';\nimport PodcastsPlayer from '../components/PodcastPlayer';\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-2500312497\" + \" \" + \"banner\"\n    }), openPodcast && __jsx(\"div\", {\n      className: \"jsx-2500312497\" + \" \" + \"modal\"\n    }, \"abierto\"), __jsx(\"h1\", {\n      className: \"jsx-2500312497\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-2500312497\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-2500312497\"\n    }, \"Series\"), __jsx(\"div\", {\n      className: \"jsx-2500312497\" + \" \" + \"channels\"\n    }, series.map(serie => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      prefetch: true\n    }, __jsx(\"a\", {\n      className: \"jsx-2500312497\" + \" \" + \"channel\"\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-2500312497\"\n    }), __jsx(\"h2\", {\n      className: \"jsx-2500312497\"\n    }, serie.title)))))), __jsx(\"h2\", {\n      className: \"jsx-2500312497\"\n    }, \"Ultimos Podcasts\"), __jsx(Podcasts, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"2500312497\"\n    }, \".modal.jsx-2500312497{position:fixed;top:0;left:0;right:0;bottom:0;z-index:9999;}.channels.jsx-2500312497{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}h1.jsx-2500312497{font-weight:600px;padding:15px;}a.channel.jsx-2500312497{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-2500312497 img.jsx-2500312497{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-2500312497{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9iZXR0eS83NDBlYjExYi1jNjc3LTQzY2YtODRmMS0wNDUzZmFhMzRlNTEvYmV0dHkvRVNUVURJT1MvUkVBQ1QvTkVYVC1KUy9wbGF0emktbmV4dGpzLTEuUm91dGVyL3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUZTLEFBRzBCLEFBUUEsQUFNSSxBQUlILEFBTUksQUFLTixZQUNJLENBckJGLENBVU0sQ0FsQmpCLEdBY1MsQUFVNEIsR0F2QnBDLE1BUVMsQ0FQUixBQTRCVyxHQWZsQixHQUlhLEVBaEJMLElBT3NELElBcUJuRCxDQTNCQyxBQWdCVyxRQVlILEtBM0J0QixBQW9CZSxXQUNiLEVBT0Esd0JBWkEsR0FWQSIsImZpbGUiOiIvbWVkaWEvYmV0dHkvNzQwZWIxMWItYzY3Ny00M2NmLTg0ZjEtMDQ1M2ZhYTM0ZTUxL2JldHR5L0VTVFVESU9TL1JFQUNUL05FWFQtSlMvcGxhdHppLW5leHRqcy0xLlJvdXRlci9wYWdlcy9jaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJ1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJ1xuXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvbGF5b3V0JztcbmltcG9ydCBQb2RjYXN0cyBmcm9tICcuLi9jb21wb25lbnRzL3BvZGNhc3RMaXN0V2l0aENsaWNrJ1xuaW1wb3J0IFBvZGNhc3RzUGxheWVyIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdFBsYXllcidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgY2hhbm5lbCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7b3BlblBvZGNhc3Q6bnVsbH07XG4gIH1cbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7cXVlcnksIHJlc30pIHtcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcbiAgICB0cnl7XG4gICAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9YCksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKVxuICAgICAgXSlcbiAgICAgIGlmKCByZXFDaGFubmVsLnN0YXR1cyA+PSA0MDAgKSB7XG4gICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXNcbiAgICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1cyB9XG4gICAgICB9XG4gICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICAgICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWw7XG5cbiAgICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcblxuICAgICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG4gICAgICByZXR1cm4geyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGU6IDIwMCB9XG4gICAgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogNTAzIH1cbiAgICB9XG4gfVxuICBcbiBvcGVuUG9kY2FzdD0gKGV2ZW50LCBwb2RjYXN0KT0+e1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB0aGlzLnNldFN0YXRlKHtcbiAgICBvcGVuUG9kY2FzdDogcG9kY2FzdFxuICB9KVxuIH1cbiAgcmVuZGVyKCkgeyAgICBcbiAgICBjb25zdCAge2NoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZX0gPSB0aGlzLnByb3BzXG4gICAgY29uc3Qge29wZW5Qb2RjYXN0fSA9IHRoaXMuc3RhdGU7XG4gICAgaWYoIHN0YXR1c0NvZGUgIT09IDIwMCApIHtcbiAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17IHN0YXR1c0NvZGUgfSAvPlxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8TGF5b3V0ICB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XG4gICAgICAgIFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhbm5lclwiIHN0eWxlPXt7IGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAgfX0gLz5cbiAgICAgICAge29wZW5Qb2RjYXN0ICYmIDxkaXYgIGNsYXNzTmFtZT1cIm1vZGFsXCI+YWJpZXJ0bzwvZGl2Pn1cbiAgICAgIDxoMT57IGNoYW5uZWwudGl0bGUgfTwvaDE+XG5cbiAgICAgIHsgc2VyaWVzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoYW5uZWxzXCI+XG4gICAgICAgICAgICB7IHNlcmllcy5tYXAoKHNlcmllKSA9PiAoXG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvY2hhbm5lbD9pZD0keyBzZXJpZS5pZCB9YH0gcHJlZmV0Y2g+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiY2hhbm5lbFwiPlxuICAgICAgICAgICAgICAgICAgPGltZyBzcmM9eyBzZXJpZS51cmxzLmxvZ29faW1hZ2Uub3JpZ2luYWwgfSBhbHQ9XCJcIi8+XG4gICAgICAgICAgICAgICAgICA8aDI+eyBzZXJpZS50aXRsZSB9PC9oMj5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIH1cblxuICAgICAgPGgyPlVsdGltb3MgUG9kY2FzdHM8L2gyPlxuICAgICAgPFBvZGNhc3RzXG4gICAgICAgIHBvZGNhc3RzPXthdWRpb0NsaXBzfVxuICAgICAgICBvbkNsaWNrUG9kY2FzdD17dGhpcy5vcGVuUG9kY2FzdH1cbiAgICAgIC8+XG4gICAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgIC5tb2RhbHtcbiAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgdG9wOjA7XG4gICAgICAgICAgbGVmdDowO1xuICAgICAgICAgIHJpZ2h0OjA7XG4gICAgICAgICAgYm90dG9tOjA7XG4gICAgICAgICAgei1pbmRleDo5OTk5O1xuICAgICAgICB9XG4gICAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLWdhcDogMTVweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGgxe1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6NjAwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjE1cHg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGEuY2hhbm5lbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5jaGFubmVsIGltZyB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgICA8L0xheW91dD5cbiAgICApXG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/media/betty/740eb11b-c677-43cf-84f1-0453faa34e51/betty/ESTUDIOS/REACT/NEXT-JS/platzi-nextjs-1.Router/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/media/betty/740eb11b-c677-43cf-84f1-0453faa34e51/betty/ESTUDIOS/REACT/NEXT-JS/platzi-nextjs-1.Router/pages/channel.js"],"names":["React","Component","Link","Error","Layout","Podcasts","PodcastsPlayer","channel","constructor","props","event","podcast","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","status","statusCode","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","backgroundImage","urls","banner_image","original","length","map","serie","logo_image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'isomorphic-fetch'\nimport Link from 'next/link'\nimport Error from './_error'\n\nimport Layout from '../components/layout';\nimport Podcasts from '../components/podcastListWithClick'\nimport PodcastsPlayer from '../components/PodcastPlayer'\n\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {openPodcast:null};\n  }\n  static async getInitialProps({query, res}) {\n    let idChannel = query.id\n    try{\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ])\n      if( reqChannel.status >= 400 ) {\n        res.statusCode = reqChannel.status\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\n      }\n      let dataChannel = await reqChannel.json()\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json()\n      let audioClips = dataAudios.body.audio_clips\n\n      let dataSeries = await reqSeries.json()\n      let series = dataSeries.body.channels\n      return { channel, audioClips, series, statusCode: 200 }\n    }\n    catch(e) {\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\n    }\n }\n  \n openPodcast= (event, podcast)=>{\n  event.preventDefault();\n  this.setState({\n    openPodcast: podcast\n  })\n }\n  render() {    \n    const  {channel, audioClips, series, statusCode} = this.props\n    const {openPodcast} = this.state;\n    if( statusCode !== 200 ) {\n      return <Error statusCode={ statusCode } />\n    }\n\n    return (\n      <Layout  title={channel.title}>\n        \n        <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n        {openPodcast && <div  className=\"modal\">abierto</div>}\n      <h1>{ channel.title }</h1>\n\n      { series.length > 0 &&\n        <div>\n          <h2>Series</h2>\n          <div className=\"channels\">\n            { series.map((serie) => (\n              <Link href={`/channel?id=${ serie.id }`} prefetch>\n                <a className=\"channel\">\n                  <img src={ serie.urls.logo_image.original } alt=\"\"/>\n                  <h2>{ serie.title }</h2>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      }\n\n      <h2>Ultimos Podcasts</h2>\n      <Podcasts\n        podcasts={audioClips}\n        onClickPodcast={this.openPodcast}\n      />\n        <style jsx>\n        {`\n        .modal{\n          position: fixed;\n          top:0;\n          left:0;\n          right:0;\n          bottom:0;\n          z-index:9999;\n        }\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          h1{\n            font-weight:600px;\n            padding:15px;\n          }\n          a.channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n            width: 100%;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}\n      </style>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}